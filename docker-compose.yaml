version: "3.9"

volumes:
  postgres_data:
  static_volume:
  media_volume:

services:
  redis:
    container_name: redis
    image: redis:6-alpine
    ports:
      - "6379:6379"
    restart: always

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    restart: always

  web:
    container_name: web
    build: .
    volumes:
      - .:/code
      - static_volume:/code/static
      - media_volume:/code/media
    env_file:
      - .env
    environment:
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - SEND_TO_SENTRY=${SEND_TO_SENTRY}
      - SENTRY_SDK_DSN=${SENTRY_SDK_DSN}
      - SENTRY_SDK_ENVIRONMENT=${SENTRY_SDK_ENVIRONMENT}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    restart: always

  celery-beat:
    container_name: celery-beat
    build: .
    command: celery -A config beat -l info
    volumes:
      - .:/code
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    depends_on:
      - redis
    restart: always

  celery-worker:
    build: .
    command: celery -A config worker -l info
    volumes:
      - .:/code
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    depends_on:
      - redis
    restart: always

  flower:
    container_name: flower
    build: .
    command: celery -A config flower
    volumes:
      - .:/code
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    ports:
      - "5555:5555"
    depends_on:
      - redis
    restart: always

  nginx:
    container_name: nginx
    image: nginx:1.21.4-alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/code/static
      - media_volume:/code/media
    ports:
      - "80:80"
    depends_on:
      - web
    restart: always
