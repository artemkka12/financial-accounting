name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DEBUG: ${{ secrets.DEBUG }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.7"

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: true
            - name: Set up cache
              uses: actions/cache@v2
              id: cached-poetry-dependencies
              with:
                path: .venv
                key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
            - name: Install dependencies
              run: poetry install
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Write .env
        uses: CallePuzzle/envvar-to-dotenv-action@0.1.0
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        with:
          variableNames: SECRET_KEY,DEBUG
          envPath: '.env'

      - name: Run tests
        run: |
          source .venv/bin/activate
          python manage.py test
